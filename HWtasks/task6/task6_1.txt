Расширьте приложение FastAPI с аутентификацией на основе файлов cookie из предыдущего задания,
добавив подпись для значений cookie. При успешном логине приложение должно установить cookie с именем "session_token",
значение которого состоит из идентификатора пользователя и криптографической подписи в формате:

<user_id>.<signature>


Для создания подписи используйте библиотеку itsdangerous или другой аналогичный инструмент.
Подпись должна гарантировать, что значение cookie не было изменено клиентом.

Требования:

Создайте маршрут /login, который принимает имя пользователя и пароль в формате JSON или формы.
При успешной проверке учетных данных создайте строку session_token, где:

<user_id> — уникальный идентификатор пользователя. Требования к user_id:

Должен представлять собой корректное значение уникального идентификатора, например, в формате UUID (стандарт RFC 4122).

Для генерации и проверки используйте библиотеку uuid, чтобы обеспечить уникальность и соблюдение формата.

Если применяется другой формат, он должен быть не короче 8 символов и состоять только из латинских букв и цифр.

<signature> — вычисленная подпись для <user_id> с использованием секретного ключа.

Установите cookie "session_token" с дополнительными параметрами безопасности: httponly=True и подходящим для тестирования значением max_age.

Создайте защищённый маршрут, например, /profile, который:

Считывает cookie "session_token".

Разбивает значение на две части (user_id и signature) - библиотека itsdangerous делает это автоматически (сама под капотом).

Проверяет корректность подписи с использованием того же секретного ключа.
Если подпись верна, возвращает информацию профиля, в противном случае – ответ с ошибкой 401 и сообщением {"message": "Unauthorized"}.

Проверьте работу приложения с помощью таких инструментов, как curl или Postman, отправляя запросы с корректными и некорректными значениями cookie.