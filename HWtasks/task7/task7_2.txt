Расширьте ваше FastAPI‑приложение, добавив в модель обработки заголовков проверку версии фронтенда (мобильного приложения). Мы симулируем ограничение старых версий на бэкенде, извлекая специальный заголовок X-Current-Version и принудительно требуя обновления приложения в сторе для доступа к API.

Модификация модели CommonHeaders

В уже существующую Pydantic‑модель CommonHeaders добавьте новое обязательное поле для заголовка X-Current-Version. Версия должна иметь формат трёх целых чисел, разделённых точкой. В OpenAPI‑документации должен быть указан ожидаемый формат номера версии, например:

x-current-version *
string
(header)
pattern: <некий паттерн, который показывает в документации принимаемый формат>


Определите внутри этой модели кастомный валидатор, который:

Сравнивает полученную версию с базовой (минимально допустимой) версией, заданной в коде константой:

MINIMUM_APP_VERSION = "0.0.2"


Если версия фронтенда ниже базовой, валидатор должен выбрасывать ValueError("Требуется обновить приложение"), что приведёт к HTTP‑статусу 422.

Интеграция модели в маршруты

Подключите обновлённую модель CommonHeaders к уже реализованным маршрутам:

GET /headers — возвращает заголовки User-Agent и Accept-Language (логика без изменений), но теперь при версии ниже базовой возвращается 422 с ошибкой валидации Pydantic с сообщением об обновлении.

GET /info — возвращает приветствие и заголовки из модели, а также устанавливает в ответ HTTP‑заголовок X-Server-Time с текущим серверным временем; при устаревшей версии также возвращает 422.

Тестирование корректной работы

Проверьте приложение с тремя сценариями:

Ниже базовой версии
X-Current-Version: 0.0.1
→ Ответ: 422 с сообщением о необходимости обновить приложение

Равно минимальной или чуть выше
X-Current-Version: 0.0.2
→ Ответ: 200 OK

{"User-Agent":"…","Accept-Language":"…"}


Крупная версия выше
X-Current-Version: 1.0.0
→ Ответ: 200 OK

{
  "message":"Добро пожаловать! Ваши заголовки успешно обработаны.",
  "headers": { … }
}


Версия некорректного формата (a.b.c)
→ Ответ: 422 (стандартная Pydantic-ошибка валидации по pattern'у).

Можете поиграться с константой, симулируя выход новых версий (например установите значение 0.2.0 и проверьте работу кода с версиями 0.0.9, 0.5.0, 1.0.1).

Понимание сравнений версий:

0.0.1 < 0.0.2 → устаревшая (доступ запрещён, 422)

0.1.0 > 0.0.11 → допустимая

2.0.0 > 1.100.500 → допустимая

Итоговая цель:
Симулировать на бэкенде проверку версии мобильного приложения и ограничивать доступ для устаревших клиентов, вынуждая их обновиться через магазин приложений.