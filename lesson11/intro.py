"""
Аутентификация и авторизация — два ключевых компонента для обеспечения безопасности
веб-приложений. Аутентификация подтверждает личность пользователя или системы,
гарантируя, что они являются теми, за кого себя выдают, а авторизация определяет,
какие действия и ресурсы доступны аутентифицированным пользователям.
"""

# В данном уроке мы подробно рассмотрим процесс реализации базовой аутентификации в FastAPI,
# разберемся в его принципах и поймем, как этот метод позволяет ограничить доступ к защищенным
# разделам приложения. Этот подход станет основой для дальнейшего изучения более сложных
# и безопасных методов аутентификации, таких как JWT и OAuth.

"""
В веб-приложениях аутентификация чаще всего реализуется через проверку логина и пароля. Когда пользователь вводит свои учетные данные, сервер проверяет их соответствие сохраненным в базе данных. Если введенные данные верны, пользователь получает доступ к системе. В противном случае доступ отклоняется.

FastAPI поддерживает различные методы аутентификации, включая:

Базовую аутентификацию (Basic Auth) — простая проверка логина и пароля.
JWT (JSON Web Token) — аутентификация на основе токенов.
OAuth 2.0 — аутентификация через сторонние сервисы (Google, GitHub и др.).
Одним из самых простых подходов является базовая аутентификация, с которой мы и будем работать в этом уроке.
"""

"""
Как работает базовая аутентификация?
Базовая аутентификация — это один из самых простых методов проверки подлинности, который используется для
защиты ресурсов в веб-приложениях. В этом методе клиент (например, веб-браузер или API-клиент) передает свои учетные данные
(имя пользователя и пароль) в заголовке HTTP-запроса, в поле Authorization. Формат данных в этом заголовке следующий:
Authorization: Basic <credentials>, где <credentials> — это закодированная строка, состоящая из имени пользователя и пароля,
разделенных двоеточием. Эта строка кодируется в формате Base64.

Пример заголовка запроса с базовой аутентификацией:

Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=

                  
Когда сервер получает запрос, он извлекает и декодирует строку из заголовка, разделяет имя пользователя и пароль,
а затем проверяет их на соответствие сохраненным данным. Если введенные данные совпадают с теми, что есть в базе данных или у
поставщика аутентификации, сервер предоставляет доступ к защищенному ресурсу. В противном случае, если данные некорректны,
сервер отклоняет запрос и отправляет ошибку, обычно с кодом 401 (Unauthorized).

FastAPI облегчает работу с базовой аутентификацией, предоставляя встроенные компоненты для обработки этого типа аутентификации.
Это позволяет значительно упростить процесс реализации и интеграции базовой аутентификации в ваше приложение.
"""







